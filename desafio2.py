# -*- coding: utf-8 -*-
"""Desafio2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15pwhERd3y4xvPUzmTrSSfT6t-dAvOMC2
"""

import tensorflow as tf
import pandas as pd

df = pd.read_csv('https://raw.githubusercontent.com/stedy/Machine-Learning-with-R-datasets/refs/heads/master/winequality-white.csv')

df_enum = pd.get_dummies(df)
df_enum

dados = df_enum.drop(columns=['quality'])
alvo = df_enum['quality']

from sklearn.preprocessing import MinMaxScaler
scaler = MinMaxScaler(feature_range=(-1,1))
dados = scaler.fit_transform(dados)
dados

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(dados, alvo, test_size=0.10, random_state=42)

model = tf.keras.models.Sequential([
  tf.keras.layers.Dense(512, activation=tf.nn.relu),
  tf.keras.layers.Dense(512, activation=tf.nn.relu),
  tf.keras.layers.Dense(1)
])

model.compile(optimizer=tf.keras.optimizers.Adam(),
              loss=tf.keras.losses.MeanSquaredError(),
              metrics=[tf.keras.metrics.R2Score])

model.fit(x_train, y_train, epochs=200)

model.evaluate(x_test, y_test)

import matplotlib.pyplot as plt
plt.figure(figsize=(12,6))
y_pred_train = model.predict(x_train)
y_pred_test = model.predict(x_test)
plt.scatter(y_train, y_pred_train, color='blue', label='Dados Reais (Treinamento)')
plt.scatter(y_test, y_pred_test, color='green', label='Dados Teste')
plt.plot(y_train, y_train, color='red', linewidth=2, label='Linha Base de Comparação')
plt.legend()
plt.show()